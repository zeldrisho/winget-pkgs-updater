name: Update WinGet Packages

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to check (leave empty for all)'
        required: false
        type: string

permissions:
  contents: read

jobs:
  check-updates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manifest:
          - manifests/VNGCorp.Zalo.yaml
      fail-fast: false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r scripts/requirements.txt
      
      - name: Check for version updates
        id: check
        run: |
          python scripts/check_version.py ${{ matrix.manifest }}
      
      - name: Generate manifests
        if: steps.check.outputs.has_update == 'true'
        id: generate
        run: |
          python scripts/generate_manifest.py \
            ${{ matrix.manifest }} \
            ${{ steps.check.outputs.version }} \
            ${{ steps.check.outputs.installer_url }} \
            /tmp/winget-manifests
      
      - name: Checkout winget-pkgs fork
        if: steps.check.outputs.has_update == 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.WINGET_FORK_REPO }}
          token: ${{ secrets.WINGET_TOKEN }}
          path: winget-pkgs
          fetch-depth: 1
      
      - name: Create branch and commit manifests
        if: steps.check.outputs.has_update == 'true'
        env:
          GH_TOKEN: ${{ secrets.WINGET_TOKEN }}
        run: |
          cd winget-pkgs
          
          # Configure git with user's info
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          # Create new branch
          BRANCH_NAME="${{ steps.check.outputs.package_id }}-${{ steps.check.outputs.version }}"
          git checkout -b "$BRANCH_NAME"
          
          # Copy manifests
          cp -r /tmp/winget-manifests/* manifests/
          
          # Add and commit
          git add manifests/
          git commit -m "Update ${{ steps.check.outputs.package_id }} to version ${{ steps.check.outputs.version }}"
          
          # Push to fork
          git push origin "$BRANCH_NAME"
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        id: branch
      
      - name: Create Pull Request to microsoft/winget-pkgs
        if: steps.check.outputs.has_update == 'true'
        env:
          GH_TOKEN: ${{ secrets.WINGET_TOKEN }}
        run: |
          # Get fork owner from WINGET_FORK_REPO (format: owner/repo)
          FORK_OWNER=$(echo "${{ secrets.WINGET_FORK_REPO }}" | cut -d'/' -f1)
          
          # Create PR body
          PR_BODY="This PR updates ${{ steps.check.outputs.package_id }} to version ${{ steps.check.outputs.version }}.

          Package Information:
          - Package ID: ${{ steps.check.outputs.package_id }}
          - Version: ${{ steps.check.outputs.version }}
          - Installer URL: ${{ steps.check.outputs.installer_url }}

          Automated Update:
          This PR was automatically generated by winget-pkgs-updater (https://github.com/${{ github.repository }})."
          
          # Create PR using gh CLI
          gh pr create \
            --repo microsoft/winget-pkgs \
            --base master \
            --head "${FORK_OWNER}:${{ steps.branch.outputs.branch_name }}" \
            --title "Update ${{ steps.check.outputs.package_id }} to version ${{ steps.check.outputs.version }}" \
            --body "$PR_BODY"
